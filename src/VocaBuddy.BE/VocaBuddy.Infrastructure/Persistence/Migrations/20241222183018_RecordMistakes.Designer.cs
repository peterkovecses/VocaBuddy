// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocaBuddy.Infrastructure.Persistence;

#nullable disable

namespace VocaBuddy.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(VocaBuddyContext))]
    [Migration("20241222183018_RecordMistakes")]
    partial class RecordMistakes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VocaBuddy.Domain.Entities.ForeignWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("NativeWordId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NativeWordId");

                    b.ToTable("ForeignWords");
                });

            modelBuilder.Entity("VocaBuddy.Domain.Entities.NativeWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("MistakeCount")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdatedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUtc");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreatedUtc"), false);

                    b.HasIndex("UpdatedUtc");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UpdatedUtc"), false);

                    b.HasIndex("UserId", "Text")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("UserId", "Text"), false);

                    b.ToTable("NativeWords", t =>
                        {
                            t.HasCheckConstraint("CK_NativeWord_MistakeCount_NonNegative", "[MistakeCount] >= 0");
                        });
                });

            modelBuilder.Entity("VocaBuddy.Domain.Entities.ForeignWord", b =>
                {
                    b.HasOne("VocaBuddy.Domain.Entities.NativeWord", "NativeWord")
                        .WithMany("Translations")
                        .HasForeignKey("NativeWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NativeWord");
                });

            modelBuilder.Entity("VocaBuddy.Domain.Entities.NativeWord", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
