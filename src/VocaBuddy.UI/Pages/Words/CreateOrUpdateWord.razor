@page "/create-or-update-word/{WordId:int?}"
@using Blazored.FluentValidation
@attribute [Authorize]
@inherits CreateOrUpdateWordBase

<PageTitle>Edit Word</PageTitle>

<div class="container">
    <h3>@(WordId.HasValue ? "Update" : "Create") Word</h3>

    @if (IsStatusMessageSet)
    {
        var statusMessageClass = OperationSucceeded ? "alert alert-success" : "alert alert-danger";
        <div class="@statusMessageClass col-md-6" role="alert">
            @StatusMessage
        </div>
    }

    @if (Loading)
    {
        <table>
            <tr>
                <td colspan="4">
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border ms-3" role="status" style="width: 1.5rem; height: 1.5rem;">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    }
    else
    {
        <EditForm Model="Model" OnValidSubmit="CreateOrUpdateWordAsync" class="mt-3">
            <FluentValidationValidator />
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label for="wordText">Word in your native language</label>
                        <InputText id="wordText" class="form-control" @bind-Value="Model.Text" required autocomplete="off" spellcheck="false" />
                        <ValidationMessage For="() => Model.Text"></ValidationMessage>
                    </div>
                </div>
            </div>

            <label>Translations</label>
            @for (var i = 0; i < Model.Translations.Count; i++)
            {
                var index = i;
                <div class="row">
                    <div class="col-md-6 mb-1">
                        <div class="input-group mb-2">
                            <InputText class="form-control" @bind-Value="Model.Translations[index].Text" required autocomplete="off" spellcheck="false" />
                            @if (index != 0)
                            {
                                <button class="btn btn-danger input-group-append" @onclick="() => RemoveTranslation(index)">
                                    <span class="oi oi-delete"></span>
                                </button>
                            }
                        </div>
                        <ValidationMessage For="() => Model.Translations[index].Text"></ValidationMessage>
                    </div>
                </div>
            }

            <ValidationMessage For="() => Model.Translations"></ValidationMessage>

            <div class="mb-3">
                <button type="button" class="btn btn-primary btn-sm" @onclick="AddTranslation">+</button>
            </div>

            <div class="row">
                <div class="col-md-6 d-flex justify-content-end">
                    <button type="submit" class="btn btn-success me-2">Save</button>
                    <a class="btn btn-secondary" href="/words">Cancel</a>
                    @if (Loading)
                    {
                        <div class="spinner-border ms-3" role="status" style="width: 1.5rem; height: 1.5rem;">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    }
                </div>
            </div>
        </EditForm>
    }
</div>